// <auto-generated />
using System;
using E_Restaurant.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Restaurant.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20241102211448_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Restaurant.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 906, DateTimeKind.Local).AddTicks(7071),
                            Description = "Starters or small dishes served before the main course.",
                            IsActive = true,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 906, DateTimeKind.Local).AddTicks(7125),
                            Description = "The main part of a meal.",
                            IsActive = true,
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 906, DateTimeKind.Local).AddTicks(7130),
                            Description = "Sweet dishes served at the end of a meal.",
                            IsActive = true,
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LookupTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LookupTypeId");

                    b.ToTable("LookupItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(164),
                            IsActive = true,
                            LookupTypeId = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(174),
                            IsActive = true,
                            LookupTypeId = 1,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(179),
                            IsActive = true,
                            LookupTypeId = 1,
                            Name = "Cancelled"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(183),
                            IsActive = true,
                            LookupTypeId = 2,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(187),
                            IsActive = true,
                            LookupTypeId = 2,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(191),
                            IsActive = true,
                            LookupTypeId = 2,
                            Name = "Online Transfer"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(195),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(199),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(203),
                            IsActive = true,
                            LookupTypeId = 3,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(207),
                            IsActive = true,
                            LookupTypeId = 4,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 898, DateTimeKind.Local).AddTicks(211),
                            IsActive = true,
                            LookupTypeId = 4,
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.LookupType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LookupTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 897, DateTimeKind.Local).AddTicks(9754),
                            IsActive = true,
                            Name = "OrderStatus"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 897, DateTimeKind.Local).AddTicks(9828),
                            IsActive = true,
                            Name = "PaymentMethod"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 897, DateTimeKind.Local).AddTicks(9832),
                            IsActive = true,
                            Name = "ItemCategory"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 897, DateTimeKind.Local).AddTicks(9836),
                            IsActive = true,
                            Name = "UserRoles"
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 906, DateTimeKind.Local).AddTicks(7221),
                            Description = "A delicious midday meal",
                            IsActive = false,
                            Name = "Lunch Special",
                            Title = "Lunch Special"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2024, 11, 2, 23, 14, 47, 906, DateTimeKind.Local).AddTicks(7229),
                            Description = "Hearty evening meal",
                            IsActive = false,
                            Name = "Dinner Feast",
                            Title = "Dinner Feast"
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.MenuCategory", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuCategories");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            CategoryId = 3
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("MenuItems", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MenuItemIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omar.mahasneh.dev@gmail.com",
                            IsActive = false,
                            Name = "omar",
                            Password = "omar1234",
                            PhoneNumber = "0796275753",
                            Role = 10
                        });
                });

            modelBuilder.Entity("E_Restaurant.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.TableReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("TableReservations", (string)null);
                });

            modelBuilder.Entity("E_Restaurant.Entities.Cart", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.LookupItem", b =>
                {
                    b.HasOne("E_Restaurant.Entities.LookupType", null)
                        .WithMany()
                        .HasForeignKey("LookupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.MenuCategory", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Category", "Category")
                        .WithMany("MenuCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("E_Restaurant.Entities.Menu", "Menu")
                        .WithMany("MenuCategories")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("E_Restaurant.Entities.MenuItem", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");
                });

            modelBuilder.Entity("E_Restaurant.Entities.Order", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.Payment", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.Review", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Restaurant.Entities.MenuItem", null)
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.TableReservation", b =>
                {
                    b.HasOne("E_Restaurant.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Restaurant.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("E_Restaurant.Entities.Category", b =>
                {
                    b.Navigation("MenuCategories");
                });

            modelBuilder.Entity("E_Restaurant.Entities.Menu", b =>
                {
                    b.Navigation("MenuCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
